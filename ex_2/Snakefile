REFERENCE_GENOME = "data/hg19.fa.gz"
PREFIX = "tu" # CHANGE TO "tu" FOR THE TUMOR SAMPLE
R1 = f"data/{PREFIX}.r1.fq.gz"
R2 = f"data/{PREFIX}.r2.fq.gz"
OUTPUT_FOLDER="output/"

# The final output target of the workflow
rule all:
    input:
        f"{OUTPUT_FOLDER}{PREFIX}_read_depth.csv"

# Index the reference genome - takes 2h
rule index_chrom:
    input:
        REFERENCE_GENOME
    output:
        REFERENCE_GENOME,
        REFERENCE_GENOME + ".amb",
        REFERENCE_GENOME + ".ann",
        REFERENCE_GENOME + ".bwt",
        REFERENCE_GENOME + ".pac",
        REFERENCE_GENOME + ".sa"
    shell:
        "bwa index {REFERENCE_GENOME}"

# Align reads to the reference genome
rule align_reads:
    input:
        ref=REFERENCE_GENOME,
        r1=R1,
        r2=R2
    output:
        sam=f"{OUTPUT_FOLDER}{PREFIX}_aligned.sam"
    shell:
        "bwa mem -t 8 {input.ref} {input.r1} {input.r2} > {output.sam}"

# Convert SAM to BAM
rule sam_to_bam:
    input:
        f"{OUTPUT_FOLDER}{PREFIX}_aligned.sam"
    output:
        bam=f"{OUTPUT_FOLDER}{PREFIX}_aligned.bam"
    shell:
        "samtools view -S -b {input} > {output.bam}"

# Sort BAM file
rule sort_bam:
    input:
        f"{OUTPUT_FOLDER}{PREFIX}_aligned.bam"
    output:
        sorted_bam=f"{OUTPUT_FOLDER}{PREFIX}_aligned_sorted.bam"
    shell:
        "samtools sort {input} -o {output.sorted_bam}"

# Index the sorted BAM file
rule index_bam:
    input:
        f"{OUTPUT_FOLDER}{PREFIX}_aligned_sorted.bam"
    output:
        f"{OUTPUT_FOLDER}{PREFIX}_aligned_sorted.bam.bai"
    shell:
        "samtools index {input}"

## SO FAR IT WAS BASICALLY THE SAME AS THE PREVIOUS WORKFLOW

rule subset_bam:
    input:
        bam=f"{OUTPUT_FOLDER}{PREFIX}_aligned_sorted.bam",
        bai=f"{OUTPUT_FOLDER}{PREFIX}_aligned_sorted.bam.bai"
    output:
        f"{OUTPUT_FOLDER}{PREFIX}_subset.bam"
    shell:
        "samtools view -b {input} chrX:20000000-40000000 > {output}"

# Sort the subset BAM
rule sort_subset_bam:
    input:
        f"{OUTPUT_FOLDER}{PREFIX}_subset.bam"
    output:
        sorted_bam=f"{OUTPUT_FOLDER}{PREFIX}_subset_sorted.bam"
    shell:
        "samtools sort {input} -o {output.sorted_bam}"


# Index the sorted subset BAM
rule index_subset_bam:
    input:
        f"{OUTPUT_FOLDER}{PREFIX}_subset_sorted.bam"
    output:
        f"{OUTPUT_FOLDER}{PREFIX}_subset_sorted.bam.bai"
    shell:
        "samtools index {input}"

# Generate a read-depth file from the subset BAM
rule generate_read_depth:
    input:
        f"{OUTPUT_FOLDER}{PREFIX}_subset_sorted.bam"
    output:
        depth_file=f"{OUTPUT_FOLDER}{PREFIX}_read_depth.csv"
    shell:
        "samtools depth {input} > {output.depth_file}"